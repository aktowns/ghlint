name: Build and push app
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      working-directory: ghlint
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      working-directory: ghlint
      run: go build -v .

    - name: Uploading artifact
      uses: actions/upload-artifact@v1
      with:
        name: ghlint
        path: ghlint/ghlint
      
  build-container:
    name: Build Container
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build
    
    steps:
    - uses: actions/checkout@v1
    - name: Downloading artifact
      uses: actions/download-artifact@v1
      with:
        name: ghlint
        path: ghlint/ghlint
    - name: Build the Docker image
      working-directory: ghlint
      run: docker build . --file Dockerfile --tag image
    - name: Log into github registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: Push image to github registry
      working-directory: ghlint
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/ghlint
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    - name: Log into dockerhub registry
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Push image to dockerhub
      working-directory: ghlint
      run: |
        IMAGE_ID=${{ secrets.DOCKERHUB_USERNAME }}/ghlint
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
